<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_e' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\EvenementController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'read_e' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\EvenementController::readAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/read',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_e' => array (  0 =>   array (    0 => 'idEvt',  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\EvenementController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idEvt',    ),    1 =>     array (      0 => 'text',      1 => '/event/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_e' => array (  0 =>   array (    0 => 'idEvt',  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\EvenementController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idEvt',    ),    1 =>     array (      0 => 'text',      1 => '/event/delete_e',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter_a' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\AnnonceController::ajouterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/ajouter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modifier_a' => array (  0 =>   array (    0 => 'idAnnonce',  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\AnnonceController::ModifierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idAnnonce',    ),    1 =>     array (      0 => 'text',      1 => '/event/modifier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimer_a' => array (  0 =>   array (    0 => 'idAnnonce',  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\AnnonceController::SupprimerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idAnnonce',    ),    1 =>     array (      0 => 'text',      1 => '/event/supprimer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'consulter_a' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\AnnonceController::ConsulterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/consulter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'rechercher_e' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\EvenementController::rechercherAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/rechercher',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'rechercher_a' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\AnnonceController::rechercherAnnAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/rechercherAnn',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\EvenementController::addAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/addAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficheAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\EvenementController::afficherEventAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/afficheAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimerAdmin' => array (  0 =>   array (    0 => 'idEvt',  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\EvenementController::supprimerEventAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idEvt',    ),    1 =>     array (      0 => 'text',      1 => '/event/supprAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modifierAdmin' => array (  0 =>   array (    0 => 'idEvt',  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\EvenementController::modifierAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idEvt',    ),    1 =>     array (      0 => 'text',      1 => '/event/modifAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouterAnnonceAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\AnnonceController::addAnnonceAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/ajouAnn',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficherAnnonceAdmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\AnnonceController::afficherAnnoncetAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/affAnn',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimerAnnonceAdmin' => array (  0 =>   array (    0 => 'idAnnonce',  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\AnnonceController::supprimerAnnonceAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idAnnonce',    ),    1 =>     array (      0 => 'text',      1 => '/event/supprAnn',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modifierAnnonceAdmin' => array (  0 =>   array (    0 => 'idAnnonce',  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\AnnonceController::modifierAnnonceAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idAnnonce',    ),    1 =>     array (      0 => 'text',      1 => '/event/modifAnn',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_participation' => array (  0 =>   array (    0 => 'idE',  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\ParticipationController::addParticipationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idE',    ),    1 =>     array (      0 => 'text',      1 => '/event/addParticipation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'annuler_participation' => array (  0 =>   array (    0 => 'idE',  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\ParticipationController::annulerParticipationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idE',    ),    1 =>     array (      0 => 'text',      1 => '/event/annulerParticipation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'detailEvent' => array (  0 =>   array (    0 => 'idEvt',  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\EvenementController::detailsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idEvt',    ),    1 =>     array (      0 => 'text',      1 => '/event/detail',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addFavoris' => array (  0 =>   array (    0 => 'idA',  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\FavorisController::addFavorisAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idA',    ),    1 =>     array (      0 => 'text',      1 => '/event/addFavoris',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'annulerFavoris' => array (  0 =>   array (    0 => 'idA',  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\FavorisController::annulerFavorisAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idA',    ),    1 =>     array (      0 => 'text',      1 => '/event/annulerFavoris',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'readFavoris' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EventAndAnnonceBundle\\Controller\\FavorisController::readFavAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/readFav',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'veterinaire_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/veterinaire/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updateVet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ZanimauxBundle\\Controller\\UserController::updateVetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/veterinaire/updateVet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteCabinet' => array (  0 =>   array (    0 => 'immatriculecabinet',  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\CabinetController::deleteCabinetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'immatriculecabinet',    ),    1 =>     array (      0 => 'text',      1 => '/veterinaire/deleteCabinet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addCabinet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\CabinetController::addCabinetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/veterinaire/addCabinet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updateCabinet' => array (  0 =>   array (    0 => 'immatriculecabinet',  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\CabinetController::updateCabinetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'immatriculecabinet',    ),    1 =>     array (      0 => 'text',      1 => '/veterinaire/updateCabinet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficherCabinetsFront' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\CabinetController::afficherCabinetsFrontAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/veterinaire/afficherCabinetsFront',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficheCabinetBack' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\CabinetController::afficheCabinetBackAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/veterinaire/afficheCabinetBack',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'InformationsCabinet' => array (  0 =>   array (    0 => 'immatriculecabinet',  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\CabinetController::InformationsCabinetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'immatriculecabinet',    ),    1 =>     array (      0 => 'text',      1 => '/veterinaire/InformationsCabinet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updateArticle' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\ArticleController::updateArticleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/veterinaire/updateArticle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'addArticle' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\ArticleController::addArticleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/veterinaire/addArticle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficherArticlesFront' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\ArticleController::afficherArticlesFrontAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/veterinaire/afficherArticlesFront',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficherArticlesBack' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\ArticleController::afficherArticlesBackAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/veterinaire/afficherArticlesBack',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'InformationsArticle' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\ArticleController::InformationsArticleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/veterinaire/InformationsArticle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteArticle' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\ArticleController::deleteArticleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/veterinaire/deleteArticle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification' => array (  0 =>   array (    0 => 'notifiable',  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\DefaultController::ListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    1 =>     array (      0 => 'text',      1 => '/veterinaire/notif',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouterDispo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\CalendrierController::ajouterDispoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/veterinaire/ajouterDispo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficheDispoDash' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\CalendrierController::afficheDispoDashAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/veterinaire/afficheDispoDash',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteDispo' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\CalendrierController::deleteDispoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/veterinaire/deleteDispo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'indexHWCalculator' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\HWCalculatorController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/veterinaire/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'HWResult' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'VeterinaireBundle\\Controller\\HWCalculatorController::HWResultAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/veterinaire/HWResult',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'magasin_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/magasin/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficheMagasinProp' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\MagasinController::afficheMagasinPropAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/magasin/afficheMagasinProp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'suppMagasinProp' => array (  0 =>   array (    0 => 'idMagasin',  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\MagasinController::suppMagasinPropAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idMagasin',    ),    1 =>     array (      0 => 'text',      1 => '/magasin/suppMagasinProp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modifMagasinProp' => array (  0 =>   array (    0 => 'idMagasin',  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\MagasinController::modifMagasinPropAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idMagasin',    ),    1 =>     array (      0 => 'text',      1 => '/magasin/modifMagasinProp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affiche_m' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\MagasinController::afficheMagasinAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/magasin/afficheM',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajout_m' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\MagasinController::ajoutMagasinAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/magasin/ajoutM',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficheProduit_m' => array (  0 =>   array (    0 => 'idMagasin',  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\ProduitController::afficheProduitMAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idMagasin',    ),    1 =>     array (      0 => 'text',      1 => '/magasin/affichePM',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affichePrduit_mDash' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\ProduitController::afficheProduitMDashAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/magasin/gerePM',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modifProduit_m' => array (  0 =>   array (    0 => 'idProduit',  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\ProduitController::modifProduitMAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idProduit',    ),    1 =>     array (      0 => 'text',      1 => '/magasin/modifPM',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'suppProduit_m' => array (  0 =>   array (    0 => 'idProduit',  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\ProduitController::suppProduitMAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idProduit',    ),    1 =>     array (      0 => 'text',      1 => '/magasin/suppPM',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajoutProduit_m' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\ProduitController::ajoutProduitMAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/magasin/ajoutPM',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajoutProduit_p' => array (  0 =>   array (    0 => 'idProduit',    1 => 'prix',  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\PanierController::ajouterProduitPanierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'prix',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idProduit',    ),    2 =>     array (      0 => 'text',      1 => '/magasin/ajoutProdPanier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'suppProduit_p' => array (  0 =>   array (    0 => 'idContenuPanier',    1 => 'prix',    2 => 'quantite',  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\PanierController::supprimerProduitPanierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'quantite',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'prix',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idContenuPanier',    ),    3 =>     array (      0 => 'text',      1 => '/magasin/suppProdPanier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affichePanier' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\PanierController::affichePanierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/magasin/affichePanier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ModifPanier' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\PanierController::modifPanierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/magasin/modifPanier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficheCommande' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\CommandeController::afficheCommandeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/magasin/afficheCommande',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'passeCommande' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\CommandeController::passeCommandeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/magasin/passeCommande',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'suppCommande' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\CommandeController::suppCommandeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/magasin/suppCommande',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modifPanier' => array (  0 =>   array (    0 => 'idContenuPanier',  ),  1 =>   array (    '_controller' => 'MagasinBundle\\Controller\\PanierController::modifPanierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idContenuPanier',    ),    1 =>     array (      0 => 'text',      1 => '/magasin/modifPanier',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pet_sitter_dresseur_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/petsitter/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'redirectPetSitter' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\PetSitterController::redirectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/petsitter/redirect3',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'recherche_Parc_DQL' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\DresseurController::rechercheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/petsitter/rechercheDQLParc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'creerpromenade' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\PetSitterController::creePromenadeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/petsitter/creerp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletepromenade' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\PetSitterController::deletePromenadeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/petsitter/deletepromenade',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'editpromenade' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\PetSitterController::updatePromenadeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/petsitter/editpromenade',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'recherche_Promenade_DQL' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\PetSitterController::rechercheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/petsitter/rechercheDQLPromenade',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'rating' => array (  0 =>   array (    0 => 'val',  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\DresseurController::ratingAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'val',    ),    1 =>     array (      0 => 'text',      1 => '/petsitter/avis',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'consulter' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\DresseurController::consulterParcAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/petsitter/consulparc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'creerparc' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\DresseurController::creeParcAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/petsitter/creerparc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'listparc' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\DresseurController::afficheParcAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/petsitter/listparc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'editparc' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\DresseurController::updateParcAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/petsitter/editparc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteparc' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\DresseurController::deleteParcAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/petsitter/deleteparc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'profileDresseur' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\DresseurController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/petsitter/profile2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'editDresseur' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\DresseurController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/petsitter/profile3',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'redirectDresseur' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\DresseurController::redirectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/petsitter/redirect2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showparcnonc' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PetSitterDresseurBundle\\Controller\\DresseurController::afficheParcnncAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/petsitter/parcdec',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'refuge_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/refuge/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'proprietaire_refuge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ZanimauxBundle\\Controller\\UserController::admingererAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/refuge/refuge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'questionnaire_chat' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\RefugeController::questionnaireChatAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/refuge/questionnaireChat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'questionnaire_chien' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\RefugeController::questionnaireChienAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/refuge/questionnaireChient',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'questionnaire_chat_internaute' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\RefugeController::questionnaireChatInternauteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/refuge/questionnaireChatInternaute',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'questionnaire_chien_Internaute' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\RefugeController::questionnaireChienInternauteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/refuge/questionnaireChientInternaute',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficher_refuge_internaute' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\RefugeController::AfficherRefugeInternauteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/refuge/AfficherRefugeInternaute',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficher_refuge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\RefugeController::AfficherRefugeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/refuge/AfficherRefuge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter_refuge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\RefugeController::AjouterRefugeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/refuge/AjouterRefuge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajouter_animal' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\AnimauxController::AjouterAnimalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/refuge/AjouterAnimal',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficher_animaux' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\AnimauxController::AfficherAnimauxAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/refuge/AfficherAnimaux',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_animaux' => array (  0 =>   array (    0 => 'idAnimal',  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\AnimauxController::deleteAnimalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idAnimal',    ),    1 =>     array (      0 => 'text',      1 => '/refuge/deletAnimaux',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supprimer_commentaire' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\AnimauxController::supprimerCommentaireAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/refuge/supprimerCommentaire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_animaux' => array (  0 =>   array (    0 => 'idAnimal',  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\AnimauxController::updateAnimalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idAnimal',    ),    1 =>     array (      0 => 'text',      1 => '/refuge/updateAnimaux',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affiche_animaux_Internaute' => array (  0 =>   array (    0 => 'immatriculation',  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\AnimauxController::afficheAnimalPourInternauteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'immatriculation',    ),    1 =>     array (      0 => 'text',      1 => '/refuge/afficheAnimauxInternaute',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affiche_animaux_client' => array (  0 =>   array (    0 => 'immatriculation',  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\AnimauxController::afficheAnimalPourClientAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'immatriculation',    ),    1 =>     array (      0 => 'text',      1 => '/refuge/afficheAnimauxClient',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'afficher_refuge_dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\RefugeController::AfficherRefugeDashboardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/refuge/AfficherRefugeDashboard/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_refuge' => array (  0 =>   array (    0 => 'immatriculation',  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\RefugeController::deleteRefugeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'immatriculation',    ),    1 =>     array (      0 => 'text',      1 => '/refuge/deleteRefuge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modifier_refuge' => array (  0 =>   array (    0 => 'immatriculation',  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\RefugeController::modifierRefugeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'immatriculation',    ),    1 =>     array (      0 => 'text',      1 => '/refuge/modifierRefuge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'refuge_plus_proche' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\RefugeController::recherchePlusProcheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/refuge/refugePlusProche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'adress_map' => array (  0 =>   array (    0 => 'immatriculation',  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\RefugeController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'immatriculation',    ),    1 =>     array (      0 => 'text',      1 => '/refuge/adressMap',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modifier_commentaire_client' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'RefugeBundle\\Controller\\AnimauxController::modifierCommentaireAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/refuge/ModifierCommentaire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'zanimaux_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ZanimauxBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affiche' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ZanimauxBundle\\Controller\\UserController::afficheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/affiche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'inscription' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ZanimauxBundle\\Controller\\UserController::inscritAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/inscrit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'redirect' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ZanimauxBundle\\Controller\\UserController::redirectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/redirect',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'profile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ZanimauxBundle\\Controller\\UserController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deconnexion' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/Template2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ZanimauxBundle\\Controller\\UserController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/log',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'loginadmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ZanimauxBundle\\Controller\\UserController::adminAfficheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/dashboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'petSitterpage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ZanimauxBundle:PetSitter:affichep',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/petSitter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ZanimauxBundle\\Controller\\UserController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gereruser' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ZanimauxBundle\\Controller\\UserController::adminuserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/gerer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'edituser' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ZanimauxBundle\\Controller\\UserController::adminEdituserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/gerer2',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.change_password.controller:changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_list' => array (  0 =>   array (    0 => 'notifiable',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    1 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_as_seen' => array (  0 =>   array (    0 => 'notifiable',    1 => 'notification',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAsSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notification',    ),    1 =>     array (      0 => 'text',      1 => '/mark_as_seen',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    3 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_as_unseen' => array (  0 =>   array (    0 => 'notifiable',    1 => 'notification',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAsUnSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notification',    ),    1 =>     array (      0 => 'text',      1 => '/mark_as_unseen',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    3 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_all_as_seen' => array (  0 =>   array (    0 => 'notifiable',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAllAsSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markAllAsSeen',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    2 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'zanimaux_mobile_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ZanimauxMobileBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affiche_magasin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ZanimauxMobileBundle\\Controller\\MagasinController::afficheMagasinAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/afficheMagasin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
